{"ast":null,"code":"var _jsxFileName = \"/storage/code/github/simonwjackson/task-warrior-react/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst TASKS_QUERY = gql`\n    {\n      tasks {\n        uuid\n        description\n        entry\n        modified\n        status\n        urgency\n      }\n    }\n`;\nconst COMPLETE_TODO = gql`\n    mutation CompleteTask($uuid: ID!) {\n      completeTask(uuid: $uuid) {\n        uuid\n        description\n        entry\n        modified\n        status\n        urgency\n      }\n    }\n`;\n\nconst Home = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(TASKS_QUERY);\n  const [completeTodo] = useMutation(COMPLETE_TODO);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, \"Error: \", JSON.stringify(error));\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Home\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, data.tasks.map(task => {\n    return __jsx(\"li\", {\n      key: task.uuid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: task.status === \"completed\",\n      onChange: e => {\n        e.preventDefault();\n        task.status !== \"completed\" ? completeTodo({\n          variables: {\n            uuid: task.uuid\n          }\n        }) : null;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }\n    }), task.description);\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/storage/code/github/simonwjackson/task-warrior-react/pages/index.js"],"names":["React","Head","useQuery","useMutation","gql","TASKS_QUERY","COMPLETE_TODO","Home","data","loading","error","completeTodo","JSON","stringify","tasks","map","task","uuid","status","e","preventDefault","variables","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAoBC,WAApB,QAAsC,qBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;;;CAAxB;AAaA,MAAME,aAAa,GAAGF,GAAI;;;;;;;;;;;CAA1B;;AAaA,MAAMG,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACG,WAAD,CAAzC;AACA,QAAM,CAAEM,YAAF,IAAmBR,WAAW,CAACG,aAAD,CAApC;;AAGA,MAAIG,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAX,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AACpB,WAAO;AACH,MAAA,GAAG,EAAEA,IAAI,CAACC,IADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEN;AACG,MAAA,IAAI,EAAC,UADR;AAEG,MAAA,OAAO,EAAED,IAAI,CAACE,MAAL,KAAgB,WAF5B;AAGG,MAAA,QAAQ,EAAEC,CAAC,IAAI;AACXA,QAAAA,CAAC,CAACC,cAAF;AACAJ,QAAAA,IAAI,CAACE,MAAL,KAAgB,WAAhB,GACMP,YAAY,CAAC;AAAEU,UAAAA,SAAS,EAAE;AAAEJ,YAAAA,IAAI,EAAED,IAAI,CAACC;AAAb;AAAb,SAAD,CADlB,GAEM,IAFN;AAGH,OARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFM,EAWJD,IAAI,CAACM,WAXD,CAAP;AAYH,GAbA,CADH,CALF,CADF;AAwBD,CArCD;;AAuCA,eAAef,IAAf","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport { useQuery , useMutation} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst TASKS_QUERY = gql`\n    {\n      tasks {\n        uuid\n        description\n        entry\n        modified\n        status\n        urgency\n      }\n    }\n`;\n\nconst COMPLETE_TODO = gql`\n    mutation CompleteTask($uuid: ID!) {\n      completeTask(uuid: $uuid) {\n        uuid\n        description\n        entry\n        modified\n        status\n        urgency\n      }\n    }\n`;\n\nconst Home = () => {\n  const { data, loading, error } = useQuery(TASKS_QUERY);\n  const [ completeTodo ] = useMutation(COMPLETE_TODO);\n\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {JSON.stringify(error)}</p>;\n  }\n\n  return (\n    <div>\n      <Head>\n        <title>Home</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <ul>\n        {data.tasks.map(task => {\n            return <li\n                key={task.uuid}\n            ><input \n                type=\"checkbox\" \n                checked={task.status === \"completed\"}\n                onChange={e => {\n                    e.preventDefault();\n                    task.status !== \"completed\"\n                        ? completeTodo({ variables: { uuid: task.uuid }})\n                        : null\n                }}\n            />{task.description}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}